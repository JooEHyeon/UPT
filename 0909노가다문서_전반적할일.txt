1. 기본 POSNET API 를 서비스에 맞게 변형

--------------------------------------

2. 데이터 수집 ( 플랭크 ) 
   라벨링(0: 좋은 자세, 1: 나쁜 자세)

2-1. 저희가 posenet 자체를 활용해서 프로그램을 짜서
다리, 등, 목이 일직선이고, 팔이 90도를 계산해서 자동으로 
라벨링(페이지랭크 알고리즘)

 1. 구글 크롤링(이미지)
 2. 페이지랭크 
 3. 라벨링 알고리즘

2-2. 노가다 ***> 어떤 방식으로 노가다한 결과를 저장할 것인지 (ex. 바른 건 1, 아닌건 0, csv)

1. 구글 크롤링(이미지) 누가? 그 자체(jpg, png)를 가져올 것인가?
 
2. 엑셀에 작성 후 한 사람이 모아서 csv파일 한 개로 만든다. (지현)
3 어떤 형식으로 맞고 틀림을 labeling : 0 False: 틀린자세 1True : 바른자세

이미지 이름을 바꾸고, 엑셀에 기록을 한다.

이미지 다운
-----------------------------------------------------------------------------

3 플랭크 데이터를 바탕으로 중심 조절 +++ 지현
 0. 이미지 정사각형으로 만들기
 1. 중심점 맞추기 -> 사람의 코를 맞추면 (이미지 컨투어)
 2. 크기 맞추기 


4. 모델 만들기(DecisionTree, XGBOOST), 돌리기 +++경지님
 0. 박준영 강사님 자료 복습 
 1. 인풋 크기를 17차원으로 만드는 거
 2. 안에 feature importance 해서 유의미한 차원 수로 차원 축소
 3. 모델 구축
 4. 아웃풋 잘 나오게 조정


5. 웹에서 카메라로 오는 정보를 저장해서 머신 러닝 모델에 
넣는 과정   +++ 주현님
 1. 오픈소스에서 카메라 관련 코드 찾아서 정보 가로채기 (정사각형으로 변환)
 2. 데이터 베이스에 저장하기
 3. 파이썬 서버 (플라스크) 구축하기
 4. 유저의 이벤트(종료, 시작 버튼) 발생하면 DB를 모델있는 파이썬 서버로 넘기기
 5. 파이썬 서버에서 다시 웹서버로 결과 전송


7. 보고서 만들기 (사용자 운동 보고서)   +++성철님
 1. 파이썬 서버에서 온 결과를 받는다 (JSON일 거 같아요)
 2. 어떤 운동에 원래 자세 그거랑 얼마나 차이가 나는지 -> 어떤 점이 부족하고 어떤 점을 잘했는지
 



------------------------------------------------
 3. 몇 회 운동을 반복했는지(성철님 심화) => 성철

--------------------------------------

8. 배포  -> 지현

8-1. 웹 UI 고치기 -> 경지님

8-2. 정확도 높이기(MobileNet,outputStride = 8, inputResolution) -> 주현

